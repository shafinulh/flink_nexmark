version: '3.8'

services:
  jobmanager:
    build: .
    image: flink-nexmark-java
    container_name: jobmanager
    command: jobmanager
    ports:
      - "8081:8081"
      - "9249:9249"
    environment:
      FLINK_PROPERTIES: |-
        jobmanager.rpc.address: jobmanager
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        state.savepoints.dir: file:///tmp/flink-savepoints
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
      KAFKA_BOOTSTRAP_SERVERS: kafka1:19092
    networks:
      - nexmark-network
    extra_hosts:
      - "kafka1:172.18.0.3"
    volumes:
      - ./savepoints:/tmp/flink-savepoints

  taskmanager:
    build: .
    image: flink-nexmark-java
    container_name: taskmanager
    command: taskmanager
    depends_on:
      - jobmanager
    ports:
      - "9249"
    environment:
      FLINK_PROPERTIES: |-
        jobmanager.rpc.address: jobmanager
        ############################### TASK MANAGER PROPERTIES ##################################
        taskmanager.cpu.cores: 10.0
        taskmanager.numberOfTaskSlots: 4
        ############################### ROCKSBD FLINK API ########################################
        state.backend.type: rocksdb
        state.backend.rocksdb.options-factory: com.example.CustomRocksDBOptionsFactory
        state.backend.rocksdb.memory.managed: false

        ###################### ACCESS LATENCY TRACKING - impacts perf ############################
        state.backend.latency-track.keyed-state-enabled: false
        state.backend.latency-track.sample-interval: 10
        state.backend.latency-track.history-size: 10000

        ###################### RocksDB Memory Metrics ################################
        state.backend.rocksdb.metrics.cur-size-all-mem-tables: true
        state.backend.rocksdb.metrics.cur-size-active-mem-table: true
        state.backend.rocksdb.metrics.block-cache-pinned-usage: true
        state.backend.rocksdb.metrics.block-cache-usage: true

        ######################## BLOCK CACHE HIT/MISS ##########################################
        state.backend.rocksdb.metrics.block-cache-capacity: true
        state.backend.rocksdb.metrics.block-cache-hit: true
        state.backend.rocksdb.metrics.block-cache-miss: true
        # individual index, filter and data block cache hit/miss tracked from RocksDB options factory

        ################################ I/O METRICS #############################################
        state.backend.rocksdb.metrics.bytes-read: true
        state.backend.rocksdb.metrics.bytes-written: true

        ################################ SST Files #############################################
        state.backend.rocksdb.metrics.num-files-at-level-base: true
        state.backend.rocksdb.metrics.num-files-at-level0: true
        state.backend.rocksdb.metrics.num-files-at-level1: true
        state.backend.rocksdb.metrics.num-files-at-level2: true

        # Total number of live SST files
        state.backend.rocksdb.metrics.num-live-versions: true

        # Number of immutable memtables (pending flush to SST)
        state.backend.rocksdb.metrics.num-immutable-mem-table: true

        # Total SST files size
        state.backend.rocksdb.metrics.total-sst-files-size: true
        state.backend.rocksdb.metrics.live-sst-files-size: true
        state.backend.rocksdb.metrics.estimate-num-keys: true

        ########################### INTERESTING ############################################
        state.backend.rocksdb.metrics.stall-micros: true
        state.backend.rocksdb.metrics.compaction-pending: true
        state.backend.rocksdb.metrics.num-running-compactions: true
        ###########################################################################################

        # METRICS INTEGRATION
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
      KAFKA_BOOTSTRAP_SERVERS: kafka1:19092
    networks:
      - nexmark-network
    extra_hosts:
      - "kafka1:172.18.0.3"
    volumes:
      - ./rocksdb-options/target/rocksdb-options-1.0-SNAPSHOT.jar:/opt/flink/lib/rocksdb-options.jar
      - ./log:/opt/flink/log
      - ./savepoints:/tmp/flink-savepoints
      - ./rocksdb_log:/opt/flink/rocksdb_native_logs
    restart: on-failure

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nexmark
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    networks:
      - nexmark-network

  adminer:
    image: adminer
    ports:
      - "18080:8080"
    networks:
      - nexmark-network
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - nexmark-network

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    networks:
      - nexmark-network
    depends_on:
      - prometheus

networks:
  nexmark-network:
    external: true
    name: nexmark-bench_default

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
