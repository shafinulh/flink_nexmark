version: '3.8'

services:
  jobmanager:
    build: .
    image: flink-nexmark-java
    container_name: jobmanager
    command: jobmanager
    ports:
      - "8081:8081"
      - "9249:9249"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        state.savepoints.dir: file:///tmp/flink-savepoints
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092
    networks:
      - nexmark-network
    extra_hosts:
      - "kafka1:172.18.0.3"

  taskmanager:
    build: .
    image: flink-nexmark-java
    container_name: taskmanager
    command: taskmanager
    depends_on:
      - jobmanager
    ports:
      - "9249"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        # TASK MANAGER PROPERTIES
        taskmanager.cpu.cores: 4.0 
        taskmanager.numberOfTaskSlots: 4
        # ROCKSBD FLINK API
        state.backend: rocksdb
        state.backend.rocksdb.options-factory: com.example.CustomRocksDBOptionsFactory
        ################################ METRICS TRACKING ########################################
        ################################ CACHE METRICS ###########################################
        state.backend.rocksdb.metrics.block-cache-capacity: true
        state.backend.rocksdb.metrics.block-cache-usage: true
        state.backend.rocksdb.metrics.block-cache-hit: true
        state.backend.rocksdb.metrics.block-cache-miss: true
        state.backend.rocksdb.metrics.block-cache-pinned-usage: true
        ################################ I/O METRICS ############################################
        state.backend.rocksdb.metrics.bytes-read: true
        state.backend.rocksdb.metrics.iter-bytes-read: true
        state.backend.rocksdb.metrics.bytes-written: true
        ###################### RocksDB Memory & State Size Metrics ################################
        state.backend.rocksdb.metrics.cur-size-all-mem-tables: true
        state.backend.rocksdb.metrics.size-all-mem-tables: true
        ## This tells us how much memory used for SSTables NOT in Block Cache
        state.backend.rocksdb.metrics.estimate-table-readers-mem: true
        ##########################################################################################
        # METRICS INTEGRATION
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092
    networks:
      - nexmark-network
    extra_hosts:
      - "kafka1:172.18.0.3"
    volumes:
      - ./rocksdb-options/target/rocksdb-options-1.0-SNAPSHOT.jar:/opt/flink/lib/rocksdb-options.jar
    restart: on-failure

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nexmark
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    networks:
      - nexmark-network

  adminer:
    image: adminer
    ports:
      - "18080:8080"
    networks:
      - nexmark-network
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - nexmark-network

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    networks:
      - nexmark-network
    depends_on:
      - prometheus

networks:
  nexmark-network:
    external: true
    name: nexmark-bench_default

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
