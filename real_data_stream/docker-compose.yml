version: '3.8'
services:
  jobmanager:
    image: flink-nexmark
    ports:
      - "8081:8081"
      - "9249:9249"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092
    networks:
      - nexmark-network
    extra_hosts:
      - "kafka1:172.18.0.3"

  taskmanager:
    image: flink-nexmark
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    ports:
      - "9249"
      - "8849:8849"
      - "1099:1099"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.cpu.cores: 8.0 
        taskmanager.numberOfTaskSlots: 1
        taskmanager.numberOfTaskManagers: 1
        taskmanager.memory.managed.fraction: 0.2
        metrics.reporters: prom,jmx
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
        metrics.reporter.jmx.factory.class: org.apache.flink.metrics.jmx.JMXReporterFactory
        jmx.server.port: 8849
        env.java.opts: "-XX:NativeMemoryTracking=summary -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=8849 -Dcom.sun.management.jmxremote.rmi.port=8849 -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.registry.port=1099 -Djava.rmi.registry.port=1099"
        # RocksDB Configuration
        # state.backend.rocksdb.log.max-file-size: 10MB
        # state.backend.rocksdb.log.file-num: 4
        # state.backend.rocksdb.log.dir: /dev/null
        # state.backend.rocksdb.compaction.level.target-file-size-base : 32MB
        # state.backend.rocksdb.block.cache.index.filter.blocks: false
        # state.backend.rocksdb.memory.high-prio-pool-ratio : 0.025
        # state.backend.rocksdb.memory.write-buffer-ratio : 0.15
        state.backend.rocksdb.options-factory: com.example.CustomRocksDBOptionsFactory
        # NEW OPTIONS
        state.backend.rocksdb.memory.managed: false
        # state.backend.rocksdb.block.cache-size: 213MB
        # RocksDB Cache Metrics
        state.backend.rocksdb.metrics.block-cache-capacity: true
        state.backend.rocksdb.metrics.block-cache-usage: true
        state.backend.rocksdb.metrics.block-cache-hit: true
        state.backend.rocksdb.metrics.block-cache-miss: true
        state.backend.rocksdb.metrics.block-cache-pinned-usage: true
        # RocksDB I/O Metrics
        state.backend.rocksdb.metrics.bytes-read: true
        state.backend.rocksdb.metrics.iter-bytes-read: true
        state.backend.rocksdb.metrics.bytes-written: true
        # RocksDB Memory & State Size Metrics
        state.backend.rocksdb.metrics.cur-size-all-mem-tables: true
        state.backend.rocksdb.metrics.size-all-mem-tables: true
        # This tells us how much memory used for SSTables NOT in Block Cache
        state.backend.rocksdb.metrics.estimate-table-readers-mem: true
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092
    networks:
      - nexmark-network
    extra_hosts:
      - "kafka1:172.18.0.3"
    volumes:
    - ./rocksdb-options/target/rocksdb-options-1.0-SNAPSHOT.jar:/opt/flink/lib/rocksdb-options.jar
    - ./log:/opt/flink/log

  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - nexmark-network

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    networks:
      - nexmark-network
    depends_on:
      - prometheus
  
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nexmark
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    networks:
      - nexmark-network

  adminer:
    image: adminer
    ports:
      - "18080:8080"
    networks:
      - nexmark-network

networks:
  nexmark-network:
    external: true
    name: nexmark-bench_default

volumes:
  prometheus_data:
  grafana_data:
  postgres_data: